{"version":3,"sources":["tempList.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","temDetails.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","_this$props$recipe","this","props","recipe","handleDetails","react_default","a","createElement","Fragment","className","src","style","height","alt","type","onClick","href","target","rel","Component","RecipeSearch","_this$props","value","handleSubmit","handleChange","onSubmit","htmlFor","name","placeholder","onChange","RecipeList","error","RecipeSearch_RecipeSearch","map","Recipe_Recipe","key","f2f_url","ingredients","publisher_url","RecipeDetails","state","id","url","fetch","data","json","jsonData","setState","console","log","_context","t0","_this$state$recipe","handleIndex","item","index","App","base_url","details_id","pageIndex","search","query","displayPage","RecipeList_RecipeList","_this","RecipeDetails_RecipeDetails","e","preventDefault","_this$state","concat","getRecpies","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab85c097.chunk.js","sourcesContent":["export const recipes = [\r\n  {\r\n    recipe_id: 35382,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 35383,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 35384,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  }\r\n];","import React, { Component } from \"react\";\r\n\r\nexport default class Recipe extends Component {\r\n  render() {\r\n    const {\r\n      image_url,\r\n      title,\r\n      source_url,\r\n      publisher,\r\n      recipe_id\r\n    } = this.props.recipe;\r\n    const { handleDetails } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n          <div className=\"card\">\r\n            <img\r\n              src={image_url}\r\n              className=\"img-card-top\"\r\n              style={{ height: \"14rem\" }}\r\n              alt=\"recipe\"\r\n            />\r\n            <div className=\"card-body text-capitalize\">\r\n              <h6>{title}</h6>\r\n              <h6 className=\"text-warning text-slanted\">\r\n                provided by {publisher}\r\n              </h6>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary text-capitalize\"\r\n                onClick={() => handleDetails(0, recipe_id)}\r\n              >\r\n                details\r\n              </button>\r\n              <a\r\n                href={source_url}\r\n                className=\"btn btn-success mx-2 text-capitalize\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                recipe url\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class RecipeSearch extends Component {\r\n  render() {\r\n    const { value, handleSubmit, handleChange } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\r\n              <h1 className=\"text-slanted text-capitalize\">\r\n                search for recipe with\r\n                <strong className=\"text-danger\">Food2Fork</strong>\r\n              </h1>\r\n              <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"search\" className=\"text-capitalize\">\r\n                  type recipes separated by comma\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    placeholder=\"chicken, onions, carrots\"\r\n                    className=\"form-control\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"input-group-textt bg-primary text-white\"\r\n                    >\r\n                      <i className=\"fas fa-search\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport RecipeSearch from \"./RecipeSearch\";\r\n\r\nexport default class RecipeList extends Component {\r\n  render() {\r\n    const {\r\n      recipes,\r\n      handleDetails,\r\n      value,\r\n      handleSubmit,\r\n      handleChange,\r\n      error\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearch\r\n          value={value}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n        <div className=\"container my-5\">\r\n          {/* title */}\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\r\n              <h1 className=\"text-slanted\">Recipe List</h1>\r\n            </div>\r\n          </div>\r\n          {/* end of title */}\r\n          <div className=\"row\">\r\n            {error ? (\r\n              <h1 className=\"text-danger text-center\">{error}</h1>\r\n            ) : (\r\n              recipes.map(recipe => {\r\n                return (\r\n                  <Recipe\r\n                    key={recipe.recipe_id}\r\n                    recipe={recipe}\r\n                    handleDetails={handleDetails}\r\n                  />\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","export const recipe = {\r\n  f2f_url: \"http://food2fork.com/view/35382\",\r\n  image_url:\r\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n  ingredients: [\r\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\r\n    \"2 slices sour dough bread\",\r\n    \"1 tablespoon butter, room temperature\",\r\n    \"2 tablespoons cream cheese, room temperature\",\r\n    \"1/2 cup jack and cheddar cheese, shredded\",\r\n    \"1 tablespoon tortilla chips, crumbled\"\r\n  ],\r\n  publisher: \"Closet Cooking\",\r\n  publisher_url: \"http://closetcooking.com\",\r\n  source_url:\r\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\r\n};","import React, { Component } from \"react\";\r\nimport { recipe } from \"../temDetails\";\r\n\r\nexport default class RecipeDetails extends Component {\r\n  // first method\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //     recipe: recipe,\r\n  //     url: `https://www.food2fork.com/api/get?key=33ddbfc44b41e62304b02d0c44f67326&rId=${\r\n  //       this.props.id\r\n  //     }`\r\n  //   };\r\n  // }\r\n\r\n  // async componentDidMount() {\r\n  //   try {\r\n  //     const data = await fetch(this.state.url);\r\n  //     const jsonData = await data.json();\r\n\r\n  //     this.setState({ recipe: jsonData.recipe });\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n\r\n  // second method\r\n  state = {\r\n    recipe: recipe\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.id;\r\n    const url = `https://www.food2fork.com/api/get?key=33ddbfc44b41e62304b02d0c44f67326&rId=${id}`;\r\n    try {\r\n      const data = await fetch(url);\r\n      const jsonData = await data.json();\r\n\r\n      this.setState(() => {\r\n        return { recipe: jsonData.recipe };\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      image_url,\r\n      publisher,\r\n      publisher_url,\r\n      source_url,\r\n      title,\r\n      ingredients\r\n    } = this.state.recipe;\r\n\r\n    const { handleIndex } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning mb-5 text-capitalize\"\r\n                onClick={() => handleIndex(1)}\r\n              >\r\n                back to recipe list\r\n              </button>\r\n              <img src={image_url} className=\"d-block w-100\" alt=\"recipe\" />\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n              <h6 className=\"text-uppercase\">{title}</h6>\r\n              <h6 className=\"text-warning text-capitalize text-slanted\">\r\n                provided by {publisher}\r\n              </h6>\r\n              <a\r\n                href={publisher_url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary mt-2 text-capitalize\"\r\n              >\r\n                publisher webpage\r\n              </a>\r\n              <a\r\n                href={source_url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-success mt-2 mx-3 text-capitalize\"\r\n              >\r\n                recipe url\r\n              </a>\r\n              <ul className=\"list-group mt-4\">\r\n                <h2 className=\"mt-3 mb-4\">Ingredients</h2>\r\n                {ingredients.map((item, index) => {\r\n                  return (\r\n                    <li key={index} className=\"list-group-item text-slanted\">\r\n                      {item}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport { recipes } from \"./tempList\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeDetails from \"./components/RecipeDetails\";\n\nclass App extends Component {\n  state = {\n    recipes: recipes,\n    url:\n      \"https://www.food2fork.com/api/search?key=33ddbfc44b41e62304b02d0c44f67326\",\n    base_url:\n      \"https://www.food2fork.com/api/search?key=33ddbfc44b41e62304b02d0c44f67326\",\n    details_id: 35384,\n    pageIndex: 1,\n    search: \"\",\n    query: \"&q=\",\n    error: \"\"\n  };\n\n  async getRecpies() {\n    try {\n      const data = await fetch(this.state.url);\n      const jsonData = await data.json();\n      if (jsonData.recipes.length === 0) {\n        this.setState(() => {\n          return { error: \"Sorry, recipe doesn't exist\" };\n        });\n      } else {\n        this.setState(() => {\n          return { recipes: jsonData.recipes };\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount() {\n    this.getRecpies();\n  }\n\n  displayPage = index => {\n    switch (index) {\n      default:\n      case 1:\n        return (\n          <RecipeList\n            recipes={this.state.recipes}\n            handleDetails={this.handleDetails}\n            value={this.state.search}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            error={this.state.error}\n          />\n        );\n      case 0:\n        return (\n          <RecipeDetails\n            id={this.state.details_id}\n            handleIndex={this.handleIndex}\n          />\n        );\n    }\n  };\n\n  handleIndex = index => {\n    this.setState({\n      pageIndex: index\n    });\n  };\n\n  handleDetails = (index, id) => {\n    this.setState({\n      pageIndex: index,\n      details_id: id\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      search: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { base_url, query, search } = this.state;\n\n    this.setState(\n      () => {\n        return { url: `${base_url}${query}${search}`, search: \"\" };\n      },\n      () => {\n        this.getRecpies();\n      }\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>{this.displayPage(this.state.pageIndex)}</React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}